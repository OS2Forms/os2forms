<?php

/**
 * @file
 * This module enabled webform submission encryption as a default option.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\WebformInterface;

/**
 * Implements hook_entity_type_alter().
 *
 * Override webform submission class to enable encryption and revision.
 */
function os2forms_encrypt_entity_type_alter(array &$entity_types): void {
  /** @var \Drupal\Core\Entity\EntityTypeInterface[] $entity_types */
  if (isset($entity_types['webform_submission'])) {
    $entity_types['webform_submission']->setStorageClass('Drupal\os2forms_encrypt\WebformOs2FormsEncryptSubmissionStorage');
  }
}

/**
 * Implements hook_webform_computed_post_save_field_alter().
 *
 * Ensure encryption of computed element values.
 */
function os2forms_encrypt_webform_computed_post_save_field_alter(array &$fields): void {
  /** @var \Drupal\os2forms_encrypt\Helper\Os2FormsEncryptor $os2formsEncryptor */
  $os2formsEncryptor = \Drupal::service('os2forms_encrypt.encryptor');

  $fields['value'] = $os2formsEncryptor->encryptValue($fields['value'], $fields['name'], $fields['webform_id']);
}

/**
 * Implements hook_webform_presave().
 *
 * Enable encryption on all webform elements, whenever saved.
 */
function os2forms_encrypt_webform_presave(WebformInterface $entity): void {
  /** @var \Drupal\os2forms_encrypt\Helper\Os2FormsEncryptor $os2formsEncryptor */
  $os2formsEncryptor = Drupal::service('os2forms_encrypt.encryptor');

  $os2formsEncryptor->enableEncryption($entity);
}

/**
 * Implements hook_form_alter().
 *
 * Removes 'element_encrypt' element from element forms.
 *
 * The hook_webform_presave method ensures all elements are
 * configured to be encrypted, making this element redundant.
 */
function os2forms_encrypt_form_alter(array &$form, FormStateInterface $form_state, string $form_id) {
  /** @var \Drupal\os2forms_encrypt\Helper\FormHelper $formHelper */
  $formHelper = Drupal::service('os2forms_encrypt.form_helper');

  $formHelper->formAlter($form, $form_state, $form_id);
}
