on: pull_request
name: Review
jobs:
  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  validate-composer-files:
    name: Validate composer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate composer files
        run: |
          # Note that we don't use the --strict flag on validate due to the
          # package drupal/config_entity_revisions 2.0.x-dev being considered a
          # version cf.
          # https://getcomposer.org/doc/articles/versions.md#branches
          docker compose run --rm php composer validate composer.json
      - name: Check that composer file is normalized
        run: |
          docker compose run --rm php composer install
          docker compose run --rm php composer normalize --dry-run

  test-composer-files:
    name: Test composer files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@v4
      - name: Check that dependencies resolve.
        run: |
          # Clean up before update (cf. https://www.drupal.org/project/simplesamlphp_auth/issues/3350773)
          rm -fr vendor/
          docker compose run --rm php composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

  php-coding-standards:
    name: PHP coding standards
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          docker compose run --rm php composer install
      - name: PHPCS
        run: |
          docker compose run --rm php composer coding-standards-check/phpcs

  php-code-analysis:
    name: PHP code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Code analysis
        run: |
          ./scripts/code-analysis

  coding-standards-markdown:
    name: Markdown coding standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Coding standards
        run: |
          docker compose run --rm markdownlint markdownlint '**/*.md'
